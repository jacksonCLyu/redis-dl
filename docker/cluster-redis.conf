# port
port 6379
# ip
bind 0.0.0.0
# 关闭本地访问保护模式
protected-mode no

# 开启集群功能
cluster-enabled yes
# 集群节点配置的文件名,非人工编写,由程序自动生成和修改
cluster-config-file nodes.conf
# 集群节点超时时间,配合 cluster-replica-validity-factor 使用
cluster-node-timeout 15000
# 探测集群节点超时不可用的次数,假设cluster-node-timeout 设置的 1000ms,cluster-replica-validity-factor 为 5, 那么1000*5之间
cluster-replica-validity-factor 5
# 主从节点下最少的从节点数
cluster-migration-barrier 1
# yes 要求所有主节点正常工作,且所有 hash slots 被分配到工作的主节点,集群才能提供服务,如果想一部分 hash slots 即可响应请求,则设置为 no
cluster-require-full-coverage no
# yes 禁止当主节点挂掉时,让从节点不能竞选为主节点
cluster-replica-no-failover no

# rdb 策略
# save “” 关闭 rdb
# 900s内至少一次写操作则执行bgsave进行rdb持久化
save 900 1
save 300 10
save 60 10000
# rdb 压缩 默认yes 消耗 cpu
rdbcompression yes
# 保存rdb文件的时候，进行错误检查校验，默认yes
rdbchecksum yes
# 指定rdb文件的名称，默认 dump.rdb
dbfilename dump.rdb

# aof策略
appendonly no
#1.no 依靠 os 进行刷新，redis 不主动刷新 AOF，这样最快，不过安全性就差。
#2.always 没提交一个修改命令都调用 fsync 刷新到 AOF 文件，非常非常慢，但也非常安全。
#3.everysec 每秒钟调用 fsync 刷新到 AOF 文件，很快，但可能会丢失 1 秒内的数据。
appendfsync everysec
# 指定 AOF 文件的名称，默认为 appendonly.aof
appendfilename appendonly.aof

# 设置 RDB 和 AOF 文件的目录
dir /data
